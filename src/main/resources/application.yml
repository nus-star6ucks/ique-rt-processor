spring:
  cloud:
    stream:
      kafka:
        streams:
          binder:
            deserializationExceptionHandler: logAndContinue
      function:
        bindings:
          recommendation-in-0: input
      bindings:
        input:
          #          consumer:
          #            materializedAs: user-info
          destination: ${KAFKA_INPUT_TOPIC:user-info}
          group: group-1
          concurrency: 4
  #        output:
  #          destination: ${KAFKA_OUTPUT_TOPIC:user-info}
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    properties:
      basic:
        # Required connection configs for Confluent Cloud Schema Registry
        auth:
          credentials:
            source: USER_INFO
          user:
            info: '${API_KEY}:${API_SECRET}'
      schema:
        registry:
          url: https://psrc-nx5kv.australia-southeast1.gcp.confluent.cloud
      bootstrap:
        servers: pkc-ldvr1.asia-southeast1.gcp.confluent.cloud:9092
      sasl:
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${API_KEY}' password='${API_SECRET}';
        mechanism: PLAIN
      security:
        protocol: SASL_SSL
      session:
        timeout:
          ms: 45000

# Configuration for Spring Cloud OpenFeign 3.1.6
feign:
  client:
    config:
      rt-client:
        url: ${DATABRICKS_URL:https://dbc-8ed342e8-72c6.cloud.databricks.com}
        defaultRequestHeaders:
          Authorization: ${TOKEN}